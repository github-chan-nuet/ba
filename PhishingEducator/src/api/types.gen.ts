// This file is auto-generated by @hey-api/openapi-ts

export type Lesson = {
    lessonId: string;
};

export type ExperienceGain = {
    newExperienceGained: number;
    totalExperience: number;
    newLevel?: number;
};

export type UserAuthentication = {
    email: string;
    password: string;
};

export type User = {
    firstname?: string;
    lastname?: string;
    email?: string;
    level?: number;
    totalExperience?: number;
};

export type UserPatchModel = {
    firstname?: string;
    lastname?: string;
    password?: string;
    email?: string;
};

export type UserPostModel = UserPatchModel & {
    [key: string]: unknown;
};

export type Exam = Array<Question>;

export type Question = {
    id?: number;
    question?: string;
    type?: 'single_choice' | 'multiple_choice';
    answers?: Array<Answer>;
};

export type Answer = {
    id?: number;
    answer?: string;
};

export type ExamCompletion = Array<QuestionCompletion>;

export type QuestionCompletion = {
    questionId?: number;
    answers?: Array<number>;
};

export type ExamValidation = {
    [key: string]: unknown;
};

export type CourseCompletion = {
    courseId: string;
    completedLessons: Array<string>;
};

export type ProblemDetail = {
    /**
     * A URI reference that identifies the problem type
     */
    type: string;
    /**
     * The HTTP status code generated by the origin server for this occurrence of the problem.
     */
    status: number;
    /**
     * A short, human-readable summary of the problem type. It should not change from occurrence to occurrence of the problem, except for purposes of localization.
     */
    title: string;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    detail?: string;
    /**
     * A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
     */
    instance?: string;
    errors?: Array<_Error>;
};

export type _Error = {
    detail: string;
    pointer: string;
};

/**
 * Id of the course
 */
export type CourseId = string;

/**
 * Id of the exam
 */
export type ExamId = string;

/**
 * Id of the user
 */
export type UserId = string;

export type CreateUserData = {
    body?: UserPostModel;
    path?: never;
    query?: never;
    url: '/users';
};

export type CreateUserErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type CreateUserError = CreateUserErrors[keyof CreateUserErrors];

export type CreateUserResponses = {
    /**
     * An RFC 9457 problem object
     */
    201: ProblemDetail;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type LoginAndReturnJwtTokenData = {
    body: UserAuthentication;
    path?: never;
    query?: never;
    url: '/users/login';
};

export type LoginAndReturnJwtTokenErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type LoginAndReturnJwtTokenError = LoginAndReturnJwtTokenErrors[keyof LoginAndReturnJwtTokenErrors];

export type LoginAndReturnJwtTokenResponses = {
    /**
     * JWT token
     */
    200: string;
};

export type LoginAndReturnJwtTokenResponse = LoginAndReturnJwtTokenResponses[keyof LoginAndReturnJwtTokenResponses];

export type GetUserData = {
    body?: never;
    path: {
        /**
         * Id of the user
         */
        userId: string;
    };
    query?: never;
    url: '/users/{userId}';
};

export type GetUserErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    401: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    403: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type GetUserError = GetUserErrors[keyof GetUserErrors];

export type GetUserResponses = {
    /**
     * todo
     */
    200: User;
};

export type GetUserResponse = GetUserResponses[keyof GetUserResponses];

export type UpdateUserData = {
    body?: UserPatchModel;
    path: {
        /**
         * Id of the user
         */
        userId: string;
    };
    query?: never;
    url: '/users/{userId}';
};

export type UpdateUserErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    401: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    403: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type UpdateUserError = UpdateUserErrors[keyof UpdateUserErrors];

export type UpdateUserResponses = {
    /**
     * User was updated
     */
    200: unknown;
};

export type GetAllLessonCompletionsOfUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/courses/completions';
};

export type GetAllLessonCompletionsOfUserErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    401: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    403: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type GetAllLessonCompletionsOfUserError = GetAllLessonCompletionsOfUserErrors[keyof GetAllLessonCompletionsOfUserErrors];

export type GetAllLessonCompletionsOfUserResponses = {
    /**
     * Completed lessons of user
     */
    200: Array<CourseCompletion>;
};

export type GetAllLessonCompletionsOfUserResponse = GetAllLessonCompletionsOfUserResponses[keyof GetAllLessonCompletionsOfUserResponses];

export type GetLessonCompletionsOfCourseAndUserData = {
    body?: never;
    path: {
        /**
         * Id of the course
         */
        courseId: string;
    };
    query?: never;
    url: '/courses/{courseId}/completions';
};

export type GetLessonCompletionsOfCourseAndUserErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    401: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    403: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type GetLessonCompletionsOfCourseAndUserError = GetLessonCompletionsOfCourseAndUserErrors[keyof GetLessonCompletionsOfCourseAndUserErrors];

export type GetLessonCompletionsOfCourseAndUserResponses = {
    /**
     * Completed lessons of user in specific course
     */
    200: Array<string>;
};

export type GetLessonCompletionsOfCourseAndUserResponse = GetLessonCompletionsOfCourseAndUserResponses[keyof GetLessonCompletionsOfCourseAndUserResponses];

export type CreateLessonCompletionData = {
    body: Lesson;
    path: {
        /**
         * Id of the course
         */
        courseId: string;
    };
    query?: never;
    url: '/courses/{courseId}/completions';
};

export type CreateLessonCompletionErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    401: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    403: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type CreateLessonCompletionError = CreateLessonCompletionErrors[keyof CreateLessonCompletionErrors];

export type CreateLessonCompletionResponses = {
    /**
     * Lesson completion newly created
     */
    201: ExperienceGain;
    /**
     * Lesson completion already exists
     */
    204: void;
};

export type CreateLessonCompletionResponse = CreateLessonCompletionResponses[keyof CreateLessonCompletionResponses];

export type GetExamsByExamIdData = {
    body?: never;
    path: {
        /**
         * Id of the exam
         */
        examId: string;
    };
    query?: never;
    url: '/exams/{examId}';
};

export type GetExamsByExamIdErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    401: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    403: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type GetExamsByExamIdError = GetExamsByExamIdErrors[keyof GetExamsByExamIdErrors];

export type GetExamsByExamIdResponses = {
    /**
     * todo
     */
    200: Exam;
};

export type GetExamsByExamIdResponse = GetExamsByExamIdResponses[keyof GetExamsByExamIdResponses];

export type CompleteExamData = {
    body?: ExamCompletion;
    path: {
        /**
         * Id of the exam
         */
        examId: string;
    };
    query?: never;
    url: '/exams/{examId}/completions';
};

export type CompleteExamErrors = {
    /**
     * An RFC 9457 problem object
     */
    400: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    401: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    403: ProblemDetail;
    /**
     * An RFC 9457 problem object
     */
    500: ProblemDetail;
};

export type CompleteExamError = CompleteExamErrors[keyof CompleteExamErrors];

export type CompleteExamResponses = {
    /**
     * todo
     */
    200: ExamValidation;
};

export type CompleteExamResponse = CompleteExamResponses[keyof CompleteExamResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}/api` | (string & {});
};