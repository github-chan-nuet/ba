stages:
  - build
  - test
  - publish

build:
  stage: build
  image: golang:1.24.1
  script:
    - cd PhishingBackend
    - go build -o /app/phishingBackend cmd/main.go
  artifacts:
    paths:
      - ./app/phishingBackend

# https://gitlab.com/gitlab-org/gitlab/-/merge_requests/66787/diffs
test:
  stage: test
  image: golang:1.24.1
  script:
    - cd PhishingBackend
    - go run gotest.tools/gotestsum@latest --junitfile testResults.xml
  artifacts:
    when: always
    paths:
      - PhishingBackend/testResults.xml
    reports:
      junit: PhishingBackend/testResults.xml

publish-phishingbackend:
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    CONTAINER_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  services:
    - name: docker:25.0.3-dind
      alias: docker
  before_script:
    - echo "${CI_REGISTRY_PASSWORD}" | docker login -u ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}
  script:
    - echo "Let's Deploy!"