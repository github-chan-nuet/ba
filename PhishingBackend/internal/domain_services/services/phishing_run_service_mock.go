// Code generated by MockGen. DO NOT EDIT.
// Source: phishing_run_service.go
//
// Generated by this command:
//
//	mockgen -source=phishing_run_service.go -destination=phishing_run_service_mock.go -package=services
//

// Package services is a generated GoMock package.
package services

import (
	domain_model "phishing_backend/internal/domain_model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockPhishingRunService is a mock of PhishingRunService interface.
type MockPhishingRunService struct {
	ctrl     *gomock.Controller
	recorder *MockPhishingRunServiceMockRecorder
	isgomock struct{}
}

// MockPhishingRunServiceMockRecorder is the mock recorder for MockPhishingRunService.
type MockPhishingRunServiceMockRecorder struct {
	mock *MockPhishingRunService
}

// NewMockPhishingRunService creates a new mock instance.
func NewMockPhishingRunService(ctrl *gomock.Controller) *MockPhishingRunService {
	mock := &MockPhishingRunService{ctrl: ctrl}
	mock.recorder = &MockPhishingRunServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPhishingRunService) EXPECT() *MockPhishingRunServiceMockRecorder {
	return m.recorder
}

// GenerateRun mocks base method.
func (m *MockPhishingRunService) GenerateRun(arg0 *domain_model.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRun", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenerateRun indicates an expected call of GenerateRun.
func (mr *MockPhishingRunServiceMockRecorder) GenerateRun(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRun", reflect.TypeOf((*MockPhishingRunService)(nil).GenerateRun), arg0)
}

// TrackRunClick mocks base method.
func (m *MockPhishingRunService) TrackRunClick(arg0 *domain_model.PhishingSimulationRun) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TrackRunClick", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// TrackRunClick indicates an expected call of TrackRunClick.
func (mr *MockPhishingRunServiceMockRecorder) TrackRunClick(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TrackRunClick", reflect.TypeOf((*MockPhishingRunService)(nil).TrackRunClick), arg0)
}
