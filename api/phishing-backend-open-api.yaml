openapi: 3.1.1
info:
  title: Phishing Backend - OpenAPI 3.0
  description: |-
    todo
  contact:
    email: mischa.binder@ost.ch, patrick.scheidegger@ost.ch
  version: 0.0.1
servers:
  - url: "/api"
tags:
  # email / user profile / XP, phishing simulation,
  - name: pet
    description: Everything about your Pets
paths:
  "/auth/login":
    post:
      summary: TODO
      description: TODO
      operationId: loginAndReturnJwtToken
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAuthentication"
        required: true
      responses:
        '200':
          description: JWT token
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Authentication claims are invalid

  "/courses/{courseId}/completions":
    post:
      summary: TODO
      description: TODO
      operationId: createLessonCompletion
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Lesson"
        required: true
      responses:
        '201':
          description: Lesson completion newly created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExperienceGain"
        '204':
          description: Lesson completion already exists
        '401':
          description: Unauthorized
        '404':
          description: Lesson not found


components:
  schemas:
    Lesson:
      required:
        - lessonId
      type: object
      properties:
        lessonId:
          type: integer
          format: int64

    ExperienceGain:
      required:
        - newExperienceGained
        - totalExperience
      type: object
      properties:
        newExperienceGained:
          type: integer
          format: int64
        totalExperience:
          type: integer
          format: int64
        newLevel:
          type: integer
          format: int64

    UserAuthentication:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
