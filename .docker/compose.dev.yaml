services:
  phishing_backend:
    build:
      context: ../PhishingBackend
      dockerfile: .docker/Dockerfile
    env_file: ../PhishingBackend/.docker/phishing_backend.dev.env
    ports:
      - "8080:8080"
    depends_on:
      phishing_mail_storage:
        condition: service_healthy
    networks:
      - frontend___backend
      - backend___db

#  phishing_educator:
#    build:
#      context: ../PhishingEducator
#      dockerfile: .docker/dev.Dockerfile
#    volumes:
#      - "../PhishingEducator/src:/app/src"
#      - "../PhishingEducator/public:/app/public"
#    ports:
#      - "3000:5173"
#    depends_on:
#      - phishing_backend
#    networks:
#      - frontend___backend

  phishing_mail_storage:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: test
      POSTGRES_DB: testdb
    volumes:
      - phishingMailStorage:/var/lib/postgresql/data
      # https://medium.com/@aedemirsen/execute-sql-commands-at-postgresql-db-startup-with-docker-2be0abadec48
      - ./create-extension.sql:/docker-entrypoint-initdb.d/create-extension.sql
    # https://stackoverflow.com/questions/35069027/docker-wait-for-postgresql-to-be-running
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d testdb -U testuser" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - backend___db


# https://stackoverflow.com/a/45606440/12828371
volumes:
  phishingMailStorage:


# https://docs.docker.com/compose/how-tos/networking/
networks:
  backend___db:
    driver: bridge

  frontend___backend:
    driver: bridge